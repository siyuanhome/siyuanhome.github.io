{"title":"jenins_CICD","slug":"jenins-CICD","date":"2021-04-10","updated":"2021-04-10","comments":true,"path":"api/posts/52747.json","excerpt":null,"cover":"assets/1569246908031.png","covers":["assets/1569246908031.png","assets/1583060962747.png","assets/1564326097865.png","assets/1564326085131.png","assets/1564325564350.png","assets/1564325665439.png","assets/1564333022739.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507120319.png","assets/1564325564350.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507120621.png","assets/1564333246959.png","assets/1564333308573.png","assets/1564333339797.png","assets/1564333462537.png","assets/1564333548629.png","assets/1564333661844.png","assets/1564333727435.png","assets/1564333796321.png","assets/1564333846376.png","assets/1564333976950.png","assets/1564334089020.png","assets/1564334209886.png","assets/1564334251756.png","assets/1585226907331.png","assets/1583230332054.png","assets/1583230568264.png","assets/1583230594109.png","assets/1585226958548.png","assets/1564334451379.png","assets/1564334945023.png","assets/image-20200507094318032.png","assets/image-20200506171824265.png","assets/image-20200507094441208.png","assets/image-20200507101226286.png","assets/image-20200507101710544.png","assets/image-20200507101806877.png","assets/image-20200506172333414.png","assets/image-20200507094735363.png","assets/1564335018840.png","assets/1570960064941.png","assets/1570960081945.png","assets/1564335123190.png","assets/1564335192681.png","assets/1564335261703.png","assets/1564335284215.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507213800.png","assets/1564341315628.png","assets/1564335657071.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507154031.png","assets/1564336901231.png","assets/1585227495268.png","assets/image-20200507102158546.png","assets/image-20200507102745939.png","assets/image-20200507102817088.png","assets/image-20200507102952918.png","assets/image-20200507103026948.png","assets/1564336717415.png","assets/1564336734472.png","assets/1564336761194.png","assets/1564341387433.png","assets/1571056070912.png","assets/1564341789289.png","assets/1564341820575.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507161153.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507160936.png","assets%5CQQ%E5%9B%BE%E7%89%8720200507161724.png","assets%5CQQ%E5%9B%BE%E7%89%8720200508212646.png","assets%5CQQ%E5%9B%BE%E7%89%8720200508212706.png","assets%5CQQ%E5%9B%BE%E7%89%8720200508212710.png","assets%5CQQ%E5%9B%BE%E7%89%8720200508213235.png","assets%5CQQ%E5%9B%BE%E7%89%8720200508213232.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509100749.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509100837.png","assets/1583067401297.png","assets/1583067657276.png","assets/1583067754415.png","assets/1583067793428.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509094203.png","assets/1583067975394.png","assets/1583068007505.png","assets/1583068086468.png","assets/1583068144311.png","assets/1583068196797.png","assets/1583068314971.png","assets/1583068382540.png","assets/1585279946364.png","assets/1585280142108.png","assets/1585221510597.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509101021.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509101109.png","assets%5CQQ%E5%9B%BE%E7%89%8720200509101308.png","assets/1585221543706.png","assets/1583068437105.png","assets/1583067427222.png","assets/image-20200507105840164.png","assets/image-20200507105945675.png","assets/image-20200507110120047.png","assets/image-20200507110135048.png","assets/image-20200507110209158.png","assets/image-20200507110222900.png","assets/image-20200509151733670.png","assets/image-20200509151812538.png","assets/image-20200507110455693.png","assets/image-20200507110525662.png","assets/image-20200509152008141.png","assets/image-20200509152113940.png","assets/image-20200509152230943.png","assets/image-20200509152625298.png","assets/image-20200507113147771.png","assets/image-20200509154328901.png","assets/image-20200509154344323.png","assets/image-20200509154445464.png","assets/image-20200509154502913.png","assets/image-20200509154549201.png","assets/image-20200509154632160.png","assets/image-20200509154656904.png","assets/image-20200509154743906.png","assets/image-20200509161909357.png","assets/image-20200509162124182.png","assets/image-20200509162254966.png","assets/image-20200509162306718.png","assets/image-20200509162359619.png","assets/image-20200509162446109.png","assets/image-20200509163833449.png","assets/image-20200509164137633.png","assets/image-20200509164427019.png","assets/image-20200509165216187.png","assets/image-20200509165247487.png","assets/image-20200509165330067.png","assets/image-20200509164137633.png","assets/image-20200509165512159.png","assets/image-20200509165859689.png","assets/image-20200509171550374.png","assets/image-20200509171913723.png","assets/image-20200509165828679.png"],"content":"<h1 id=\"Jenkins 构建 CI-CD\"><a href=\"#Jenkins 构建 CI-CD\" class=\"headerlink\" title=\"Jenkins 构建 CI/CD\"></a>Jenkins 构建 CI/CD</h1><h3 id=\"CI-CD 是什么？\"><a href=\"#CI-CD 是什么？\" class=\"headerlink\" title=\"CI/CD 是什么？\"></a>CI/CD 是什么？</h3><p>  CI(Continuous integration，中文意思是持续集成)是一种软件开发时间。持续集成强调开发人员提交了新代码之后，立刻进行构建、测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。</p>\n<p>CD(Continuous Delivery， 中文意思持续交付)是在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境中。比如，我们完成测试后，可以把代码部署到连接数据库的环境中更多的测试。如果代码没有问题，可以继续手动部署到生产环境。</p>\n<p><strong>持续集成 / 持续发布</strong>—开发(git) –&gt;git 主库–&gt;jenkins(git+jdk+tomcat+maven 打包 + 测试）–&gt; 发布到 tomcat 服务器 </p>\n<h3 id=\"为什么要 -CI-CD- 方法简介\"><a href=\"# 为什么要 -CI-CD- 方法简介\" class=\"headerlink\" title=\"为什么要 CI / CD 方法简介\"></a>为什么要 CI / CD 方法简介 </h3><p> 软件开发的连续方法基于自动执行脚本，以最大限度地减少在开发应用程序时引入错误的可能性。从新代码的开发到部署，它们需要较少的人为干预甚至根本不需要干预。</p>\n<p>它涉及在每次小迭代中不断构建，测试和部署代码更改，从而减少基于有缺陷或失败的先前版本开发新代码的机会。</p>\n<p>这种方法有三种主要方法，每种方法都根据最适合您的策略进行应用。</p>\n<p><strong>持续集成</strong>(Continuous Integration, CI):  代码合并，构建，部署，测试都在一起，不断地执行这个过程，并对结果反馈。</p>\n<p><strong>持续部署</strong>(Continuous Deployment, CD):　部署到测试环境、预生产环境、生产环境。　</p>\n<p><strong>持续部署</strong>(Continuous Delivery, CD):  将最终产品发布到生产环境、给用户使用。</p>\n<h2 id=\"一、jenkins 介绍\"><a href=\"# 一、jenkins 介绍\" class=\"headerlink\" title=\"一、jenkins 介绍\"></a>一、jenkins 介绍 </h2><p> Jenkins 是帮我们将代码进行统一的编译打包、还可以放到 tomcat 容器中进行发布。<br> 我们通过配置，将以前：编译、打包、上传、部署到 Tomcat 中的过程交由 Jenkins，Jenkins 通过给定的代码地址 URL，将代码拉取到其“宿主服务器”（Jenkins 的安装位置），进行编译、打包和发布到 web 容器中。</p>\n<h5 id=\"1、Jenkins 概述\"><a href=\"#1、Jenkins 概述\" class=\"headerlink\" title=\"1、Jenkins 概述\"></a>1、Jenkins 概述 </h5><pre><code> 是一个开源的、提供友好操作界面的持续集成 (CI) 工具，主要用于持续、自动的构建的一些定时执行的任务。Jenkins 用 Java 语言编写，可在 Tomcat 等流行的容器中运行，也可独立运行。</code></pre>\n<p><strong>jenkins 通常与版本管理工具(SCM)、构建工具结合使用；常用的版本控制工具有 SVN、GIT。jenkins 构建工具有 Maven、Ant、Gradle。</strong></p>\n<h5 id=\"2、Jenkins 目标\"><a href=\"#2、Jenkins 目标\" class=\"headerlink\" title=\"2、Jenkins 目标\"></a>2、Jenkins 目标</h5><p>① 持续、自动地构建 / 测试软件项目。</p>\n<p>② 监控软件开放流程，快速问题定位及处理，提高开发效率。</p>\n<h5 id=\"3、Jenkins 特性\"><a href=\"#3、Jenkins 特性\" class=\"headerlink\" title=\"3、Jenkins 特性\"></a>3、Jenkins 特性 </h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 易于安装   # 不需要安装、不需要数据库，只需通过 java  -jar jenkins.war 或部署到一个 servlet 容器中</span><br><span class=\"line\">2. 易于配置   #所有的配置都可能通过 jenkins 提供的 web 界面完成，当然如果你喜欢，也可以通过手动修改 xml 文件进行配置</span><br><span class=\"line\">3. 文件识别  # jenkins 能跟踪每次构建生成哪些 jar 包以及使用哪个版本的 jar 包</span><br><span class=\"line\">4. 分布式构建  # 支持 Jenkins 能够让多台计算机一起构建 / 测试。</span><br><span class=\"line\">5. 任务（Job）和构建(build) #任务：(Job) 是 Jenkins 的一个执行计划，是一系列操作的集合。构建：是 Jenkins 的任务的一次运行。</span><br><span class=\"line\">6. 插件支持  # jenkins 可以通过第三方插件扩展，也可以根据团队需要开发插件</span><br></pre></td></tr></table></figure>\n\n<p>工作流程图:</p>\n<p><img src=\"assets/1569246908031.png\" alt=\"1569246908031\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试环境中：</span><br><span class=\"line\">1. 开发者会将代码上传到版本库中。</span><br><span class=\"line\">2.jenkins 通过配置版本库的连接地址，获取到源代码。</span><br><span class=\"line\">3.jenkins 获取到源代码之后通过参数化构建 (或者触发器) 开始编译打包。</span><br><span class=\"line\">4.jenkins 通过调用 &quot;maven（Ant 或者 Gradle）命令实现编译打包过程。</span><br><span class=\"line\">5. 生成的 war 包通过 ssh 插件上传到远程 tomcat 服务器中通过 shell 脚本自动发布项目。</span><br><span class=\"line\">生产环境：</span><br><span class=\"line\">测试环境将项目测试没问题后，将项目推送到线上正式环境。</span><br><span class=\"line\">1. 可以选择手动。</span><br><span class=\"line\">2. 也可以通过调用脚本推送过去。</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4、产品发布流程\"><a href=\"#4、产品发布流程\" class=\"headerlink\" title=\"4、产品发布流程\"></a>4、产品发布流程 </h5><p> 产品设计成型 -&gt; 开发人员开发代码 -&gt; 测试人员测试功能 -&gt; 运维人员发布上线</p>\n<p>持续集成（Continuous integration，简称 CI）</p>\n<p>持续交付（Continuous delivery）</p>\n<p>持续部署（continuous deployment） </p>\n<p><img src=\"assets/1583060962747.png\" alt=\"1583060962747\"></p>\n<h2 id=\"二、部署应用\"><a href=\"# 二、部署应用\" class=\"headerlink\" title=\"二、部署应用\"></a>二、部署应用 </h2><h2 id=\"Jenkins-Github-Tomcat 实战\"><a href=\"#Jenkins-Github-Tomcat 实战\" class=\"headerlink\" title=\"Jenkins+Github+Tomcat 实战\"></a>Jenkins+Github+Tomcat 实战</h2><h5 id=\"准备环境\"><a href=\"# 准备环境\" class=\"headerlink\" title=\"准备环境:\"></a> 准备环境:</h5><p>两台机器</p>\n<p>git-server    —-<a href=\"https://github.com/bingyue/easy-springmvc-maven\">https://github.com/bingyue/easy-springmvc-maven</a>    git 仓库的地址</p>\n<p>jenkins-server    —192.168.246.212—最好是 3 个 G 以上</p>\n<p>java-server   —–192.168.246.210    </p>\n<p><a href=\"https://github.com/bingyue/easy-springmvc-maven\">https://github.com/bingyue/easy-springmvc-maven</a></p>\n<h5 id=\"1- 部署 jenkins 服务器\"><a href=\"#1- 部署 jenkins 服务器\" class=\"headerlink\" title=\"1. 部署 jenkins 服务器\"></a>1. 部署 jenkins 服务器</h5><p>jenkins-server    —192.168.246.212 操作如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装 git 客户端:</span><br><span class=\"line\">[root@jenkins-server ~]# yum install -y git   #安装 git 客户端 </span><br><span class=\"line\">[root@jenkins-server ~]# ssh-keygen</span><br><span class=\"line\">[root@jenkins-server ~]# ssh-copy-id -i root@192.168.246.210   #拷贝到后端 java 服务器</span><br><span class=\"line\"></span><br><span class=\"line\"> 开始部署 jenkins：</span><br><span class=\"line\">1. 上传 jdk</span><br><span class=\"line\">[root@jenkins-server ~]# tar xzf jdk-8u211-linux-x64.tar.gz -C /usr/local/</span><br><span class=\"line\">[root@jenkins-server ~]# cd /usr/local/</span><br><span class=\"line\">[root@jenkins-server local]# mv jdk1.8.0_211/ java</span><br><span class=\"line\"></span><br><span class=\"line\">2. 安装 tomcat</span><br><span class=\"line\">[root@jenkins-server ~]# wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.42/bin/apache-tomcat-8.5.45.tar.gz        #可以上传包 </span><br><span class=\"line\">[root@jenkins-server ~]# tar xzf apache-tomcat-8.5.45.tar.gz -C /usr/local/</span><br><span class=\"line\">[root@jenkins-server ~]# cd /usr/local/ </span><br><span class=\"line\">[root@jenkins-server local]# mv apache-tomcat-8.5.45/ tomcat</span><br><span class=\"line\"></span><br><span class=\"line\">3. 安装 maven</span><br><span class=\"line\">[root@jenkins-server ~]# wget http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz       #可以上传包</span><br><span class=\"line\">[root@jenkins-server ~]# tar xzf apache-maven-3.5.4-bin.tar.gz -C /usr/local/java</span><br><span class=\"line\">[root@jenkins-server ~]# cd /usr/local/java</span><br><span class=\"line\">[root@jenkins-server java]# mv apache-maven-3.5.4/ maven</span><br><span class=\"line\"></span><br><span class=\"line\"> 设置变量:</span><br><span class=\"line\">[root@jenkins-server ~]# vim /etc/profile</span><br><span class=\"line\">JAVA_HOME=/usr/local/java</span><br><span class=\"line\">MAVEN_HOME=/usr/local/java/maven</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$MAVEN_HOME/bin</span><br><span class=\"line\">export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL JAVA_HOME MAVEN_HOME</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jenkins-server ~]# source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">验证:</span><br><span class=\"line\">[root@jenkins-server ~]# java -version </span><br><span class=\"line\">java version &quot;1.8.0_211&quot;</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jenkins-server ~]# mvn -v   #查看 maven 的版本信息 </span><br><span class=\"line\">Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-18T02:33:14+08:00)</span><br><span class=\"line\">Maven home: /usr/local/java/maven</span><br><span class=\"line\">Java version: 1.8.0_191, vendor: Oracle Corporation, runtime: /usr/local/java/jre</span><br><span class=\"line\">Default locale: en_US, platform encoding: UTF-8</span><br><span class=\"line\">OS name: &quot;linux&quot;, version: &quot;3.10.0-693.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"> 下载 jenkins 的安装包:</span><br><span class=\"line\">安装 jenkins:2.196  ---- 通过官网直接下载 war 包。</span><br><span class=\"line\">官网:http://updates.jenkins-ci.org/download/war/</span><br><span class=\"line\">[root@jenkins-server ~]# wget http://updates.jenkins-ci.org/download/war/2.196/jenkins.war     #可以上传包 </span><br><span class=\"line\"> 部署 jenkins</span><br><span class=\"line\">[root@jenkins-server ~]# cd /usr/local/tomcat/webapps/</span><br><span class=\"line\">[root@jenkins-server webapps]# rm -rf * </span><br><span class=\"line\">[root@jenkins-server webapps]# cp /root/jenkins.war .</span><br><span class=\"line\">[root@jenkins-server webapps]# ../bin/startup.sh   #启动 tomcat，../bin/shutdown.sh 关闭 </span><br><span class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/local/java</span><br><span class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">Tomcat started.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jenkins-server ~]# netstat -lntp  |grep java            #查看 tomcat 状态</span><br><span class=\"line\">tcp6       0      0 :::8080                 :::*                    LISTEN      73144/java          </span><br><span class=\"line\">tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      73144/java </span><br></pre></td></tr></table></figure>\n\n<p><strong>如果启动了访问提示</strong></p>\n<p>访问 <a href=\"http://192.168.246.212:8080/jenkins\">http://192.168.246.212:8080/jenkins</a></p>\n<p><img src=\"assets/1564326097865.png\" alt=\"1564326097865\"></p>\n<p>如果访问失败，解决办法如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cd /usr/local/tomcat/conf/</span><br><span class=\"line\">[root@jenkins-server conf]# vim context.xml  ----- 添加如下内容:</span><br><span class=\"line\">    &lt;Resources</span><br><span class=\"line\">        cachingAllowed=&quot;true&quot;</span><br><span class=\"line\">        cacheMaxSize=&quot;100000&quot;</span><br><span class=\"line\">    /&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1564326085131.png\" alt=\"1564326085131\"></p>\n<p>重启 tomcat</p>\n<p>如果还是不行:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins ~]# cd .jenkins/updates/ 到 jenkins 的工作目录下 </span><br><span class=\"line\">[root@jenkins updates]# vim default.json</span><br><span class=\"line\"> 把 &quot;connectionCheckUrl&quot;:&quot;http://www.google.com/&quot; 改为  &quot;connectionCheckUrl&quot;:&quot;http://www.baidu.com/&quot;</span><br></pre></td></tr></table></figure>\n\n<p>要是还是不行:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要你进入 jenkins 的工作目录，打开 -----hudson.model.UpdateCenter.xml</span><br><span class=\"line\">把 http://updates.jenkins-ci.org/update-center.json</span><br><span class=\"line\">改成 </span><br><span class=\"line\">http://mirror.xmission.com/jenkins/updates/update-center.json</span><br><span class=\"line\"> 每次改完记得重启！</span><br></pre></td></tr></table></figure>\n\n<p>使用运行 war 的形式安装 jenkins，因为伟大的墙出现，“该 jenkins 实例似乎已离线” 问题：</p>\n<p>解决办法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">需要你进入 jenkins 的工作目录，打开 -----hudson.model.UpdateCenter.xml 将 url 中的 https://updates.jenkins.io/update-center.json 更改为 http://updates.jenkins.io/update-center.json，即去掉 https 中的 s 。</span><br><span class=\"line\">或者更改为 https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br><span class=\"line\">是国内的清华大学的镜像地址。</span><br><span class=\"line\">然后重启 tomcat</span><br></pre></td></tr></table></figure>\n\n<p>======================================================================</p>\n<h5 id=\"2- 访问界面 -—需要多等一会\"><a href=\"#2- 访问界面 -—需要多等一会\" class=\"headerlink\" title=\"2. 访问界面:   —需要多等一会\"></a>2. 访问界面:   —需要多等一会</h5><p><a href=\"http://192.168.246.212:8080/jenkins\">http://192.168.246.212:8080/jenkins</a></p>\n<p><img src=\"assets/1564325564350.png\" alt=\"1564325564350\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cat /opt/jenkins/secrets/initialAdminPassword</span><br><span class=\"line\">b36b8b04c5b84e659701304dfe848999    --- 复制这个密码粘贴到上面提示的空格里面。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1564325665439.png\" alt=\"1564325665439\"></p>\n<p>下面需要很长很长一段时间（大约两个小时），耐心等候即可</p>\n<p><img src=\"assets/1564333022739.png\" alt=\"1564333022739\"></p>\n<p>如果嫌弃安装慢可以进行如下操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]#  /usr/local/tomcat/bin/shutdown.sh  #关闭 tomcat</span><br><span class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/local/java</span><br><span class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jenkins-server ~]# cd /root/.jenkins</span><br><span class=\"line\">[root@jenkins-server .jenkins]# mv plugins/ plugins.bak</span><br><span class=\"line\">[root@jenkins-server .jenkins]# cd /usr/src</span><br><span class=\"line\">                         #上传包 plugins.tar.gz</span><br><span class=\"line\">[root@jenkins-serve src]# ls</span><br><span class=\"line\"> plugins.tar.gz</span><br><span class=\"line\">[root@jenkins-serve src]# tar -xzf plugins.tar.gz -C /root/.jenkins/    #解压</span><br><span class=\"line\">[root@jenkins-serve src]# /usr/local/tomcat/bin/startup.sh   #启动 tomcat</span><br><span class=\"line\">Using CATALINA_BASE:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_HOME:   /usr/local/tomcat</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</span><br><span class=\"line\">Using JRE_HOME:        /usr/local/java</span><br><span class=\"line\">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</span><br><span class=\"line\">Tomcat started.</span><br></pre></td></tr></table></figure>\n\n<p>再次启动 tomcat 会显示如下：</p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507120319.png\"></p>\n<p>再次让输入密码</p>\n<p><img src=\"assets/1564325564350.png\" alt=\"1564325564350\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cat /opt/jenkins/secrets/initialAdminPassword</span><br><span class=\"line\">b36b8b04c5b84e659701304dfe848999    --- 复制这个密码粘贴到上面提示的空格里面。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507120621.png\"></p>\n<p>用户名：admin</p>\n<p>密码：123456</p>\n<p>全名：123</p>\n<p>邮箱：123@.com</p>\n<p><img src=\"assets/1564333246959.png\" alt=\"1564333246959\"></p>\n<p>实例配置：<a href=\"http://192.168.246.212:8080/jenkins/\">http://192.168.246.212:8080/jenkins/</a>        (jenkins-server 服务器的 ip 地址，这里是本服务器的 ip)</p>\n<p><img src=\"assets/1564333308573.png\" alt=\"1564333308573\"></p>\n<p><img src=\"assets/1564333339797.png\" alt=\"1564333339797\"></p>\n<h5 id=\"3- 安装插件\"><a href=\"#3- 安装插件\" class=\"headerlink\" title=\"3. 安装插件\"></a>3. 安装插件 </h5><p><strong> 注意：上传的 plugins.tar.gz 包中含有以下插件，无须再安装插件</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装插件:</span><br><span class=\"line\">所需的插件:</span><br><span class=\"line\">• Maven 插件 Maven Integration plugin</span><br><span class=\"line\">• 发布插件 Deploy to container Plugin</span><br><span class=\"line\">需要安装插件如下：</span><br><span class=\"line\">=====================================================================================</span><br><span class=\"line\">安装插件 Deploy to container    --- 支持自动化代码部署到 tomcat 容器 </span><br><span class=\"line\">GIT pligin  可能已经安装</span><br><span class=\"line\">Maven Integration   :jenkins 利用 Maven 编译，打包所需插件</span><br><span class=\"line\">Publish Over SSH  : 通过 ssh 连接</span><br><span class=\"line\">ssh  插件</span><br><span class=\"line\"> 安装过程:</span><br><span class=\"line\">系统管理 ---&gt; 插件管理 ----&gt; 可选插件 ---&gt; 过滤 Deploy to container----&gt; 勾选 ---&gt; 直接安装</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1564333462537.png\" alt=\"1564333462537\"></p>\n<p><img src=\"assets/1564333548629.png\" alt=\"1564333548629\"></p>\n<p><img src=\"assets/1564333661844.png\" alt=\"1564333661844\"></p>\n<p>输入插件名后按回车！</p>\n<p>然后等待安装完成，点击返回首页</p>\n<p><img src=\"assets/1564333727435.png\" alt=\"1564333727435\"></p>\n<p>再次安装插件</p>\n<p><img src=\"assets/1564333796321.png\" alt=\"1564333796321\"></p>\n<p><img src=\"assets/1564333846376.png\" alt=\"1564333846376\"></p>\n<p><img src=\"assets/1564333976950.png\" alt=\"1564333976950\"></p>\n<p><img src=\"assets/1564334089020.png\" alt=\"1564334089020\"></p>\n<p>以上所有插件安装完成</p>\n<p>开始配置 ssh</p>\n<p><img src=\"assets/1564334209886.png\" alt=\"1564334209886\"></p>\n<p>邮箱（可选）</p>\n<p><img src=\"assets/1564334251756.png\" alt=\"1564334251756\"></p>\n<p><img src=\"assets/1585226907331.png\" alt=\"1585226907331\"></p>\n<p><img src=\"assets/1583230332054.png\" alt=\"1583230332054\"></p>\n<p><img src=\"assets/1583230568264.png\" alt=\"1583230568264\"></p>\n<p><img src=\"assets/1583230594109.png\" alt=\"1583230594109\"></p>\n<p>授权码：FLVGDHEJOKEWPQRX</p>\n<p><img src=\"assets/1585226958548.png\" alt=\"1585226958548\"></p>\n<p>在最下面配置用户私钥:</p>\n<p><img src=\"assets/1564334451379.png\" alt=\"1564334451379\"></p>\n<p>  key: 指的是 jenkins 服务器用哪个用户去远程连接程序服务器就是那个用户的私钥。</p>\n<p>jenkins-server    —192.168.246.212 这台服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cat .ssh/id_rsa</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4- 添加远程 ssh-server\"><a href=\"#4- 添加远程 ssh-server\" class=\"headerlink\" title=\"4. 添加远程 ssh-server:\"></a>4. 添加远程 ssh-server:</h5><p><strong>注意：远程连接的是分发过公钥的服务器的 ip，这里的 ip 是 java-server  192.168.246.210 这台服务器的 ip 地址</strong></p>\n<p><img src=\"assets/1564334945023.png\" alt=\"1564334945023\"></p>\n<h5 id=\"5- 扩展：邮件通知（用于项目构建后发送邮件）\"><a href=\"#5- 扩展：邮件通知（用于项目构建后发送邮件）\" class=\"headerlink\" title=\"5. 扩展：邮件通知（用于项目构建后发送邮件）\"></a>5. 扩展：邮件通知（用于项目构建后发送邮件）</h5><p><img src=\"assets/image-20200507094318032.png\" alt=\"image-20200507094318032\"></p>\n<p><img src=\"assets/image-20200506171824265.png\" alt=\"image-20200506171824265\"></p>\n<p><img src=\"assets/image-20200507094441208.png\" alt=\"image-20200507094441208\"></p>\n<p><img src=\"assets/image-20200507101226286.png\" alt=\"image-20200507101226286\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">邮件主题：</span><br><span class=\"line\">构建通知:$&#123;BUILD_STATUS&#125; - $&#123;PROJECT_NAME&#125; - Build # $&#123;BUILD_NUMBER&#125; !</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">邮件内容：</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;    </span><br><span class=\"line\">&lt;html&gt;    </span><br><span class=\"line\">&lt;head&gt;    </span><br><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;&gt;    </span><br><span class=\"line\">&lt;title&gt;$&#123;ENV, var=&quot;JOB_NAME&quot;&#125;- 第 $&#123;BUILD_NUMBER&#125; 次构建日志 &lt;/title&gt;    </span><br><span class=\"line\">&lt;/head&gt;    </span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;body leftmargin=&quot;8&quot; marginwidth=&quot;0&quot; topmargin=&quot;8&quot; marginheight=&quot;4&quot;    </span><br><span class=\"line\">    offset=&quot;0&quot;&gt;    </span><br><span class=\"line\">    &lt;table width=&quot;95%&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;  style=&quot;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&quot;&gt;    </span><br><span class=\"line\">        &lt;tr&gt;    </span><br><span class=\"line\">            本邮件由系统自动发出，无需回复！&lt;br/&gt;            </span><br><span class=\"line\">            各位同事，大家好，以下为 $&#123;PROJECT_NAME &#125; 项目构建信息 &lt;/br&gt; </span><br><span class=\"line\">            &lt;td&gt;&lt;font color=&quot;#CC0000&quot;&gt; 构建结果 - $&#123;BUILD_STATUS&#125;&lt;/font&gt;&lt;/td&gt;   </span><br><span class=\"line\">        &lt;/tr&gt;    </span><br><span class=\"line\">        &lt;tr&gt;    </span><br><span class=\"line\">            &lt;td&gt;&lt;br /&gt;    </span><br><span class=\"line\">            &lt;b&gt;&lt;font color=&quot;#0B610B&quot;&gt; 构建信息 &lt;/font&gt;&lt;/b&gt;    </span><br><span class=\"line\">            &lt;hr size=&quot;2&quot; width=&quot;100%&quot; align=&quot;center&quot; /&gt;&lt;/td&gt;    </span><br><span class=\"line\">        &lt;/tr&gt;    </span><br><span class=\"line\">        &lt;tr&gt;    </span><br><span class=\"line\">            &lt;td&gt;    </span><br><span class=\"line\">                &lt;ul&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 项目名称 ： $&#123;PROJECT_NAME&#125;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 构建编号 ： 第 $&#123;BUILD_NUMBER&#125; 次构建 &lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 触发原因： $&#123;CAUSE&#125;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 构建状态： $&#123;BUILD_STATUS&#125;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 构建日志： &lt;a href=&quot;$&#123;BUILD_URL&#125;console&quot;&gt;$&#123;BUILD_URL&#125;console&lt;/a&gt;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 构建  Url ： &lt;a href=&quot;$&#123;BUILD_URL&#125;&quot;&gt;$&#123;BUILD_URL&#125;&lt;/a&gt;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 工作目录 ： &lt;a href=&quot;$&#123;PROJECT_URL&#125;ws&quot;&gt;$&#123;PROJECT_URL&#125;ws&lt;/a&gt;&lt;/li&gt;    </span><br><span class=\"line\">                    &lt;li&gt; 项目  Url ： &lt;a href=&quot;$&#123;PROJECT_URL&#125;&quot;&gt;$&#123;PROJECT_URL&#125;&lt;/a&gt;&lt;/li&gt;    </span><br><span class=\"line\">                &lt;/ul&gt;    </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h4&gt;&lt;font color=&quot;#0B610B&quot;&gt; 失败用例 &lt;/font&gt;&lt;/h4&gt;</span><br><span class=\"line\">&lt;hr size=&quot;2&quot; width=&quot;100%&quot; /&gt;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">FAILED_TESTS&lt;br/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h4&gt;&lt;font color=&quot;#0B610B&quot;&gt; 最近提交 (#$SVN_REVISION)&lt;/font&gt;&lt;/h4&gt;</span><br><span class=\"line\">&lt;hr size=&quot;2&quot; width=&quot;100%&quot; /&gt;</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">&#123;CHANGES_SINCE_LAST_SUCCESS, reverse=<span class=\"literal\">true</span>, format=<span class=\"string\">&quot;%c&quot;</span>, changesFormat=<span class=\"string\">&quot;&lt;li&gt;%d [%a] %m&lt;/li&gt;&quot;</span>&#125;</span></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"> 详细提交: &lt;a href=&quot;$&#123;PROJECT_URL&#125;changes&quot;&gt;$&#123;PROJECT_URL&#125;changes&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            &lt;/td&gt;    </span><br><span class=\"line\">        &lt;/tr&gt;    </span><br><span class=\"line\">    &lt;/table&gt;    </span><br><span class=\"line\">&lt;/body&gt;    </span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>设置邮箱触发器</p>\n<p><img src=\"assets/image-20200507101710544.png\" alt=\"image-20200507101710544\"></p>\n<p>可根据实际情况选择触发条件，此处选择 总是</p>\n<p><img src=\"assets/image-20200507101806877.png\" alt=\"image-20200507101806877\"></p>\n<p>管理监控配置—&gt; 系统管理员邮件地址：<a href=\"mailto:&#x61;&#x6c;&#x6f;&#110;&#103;&#64;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#109;\">&#x61;&#x6c;&#x6f;&#110;&#103;&#64;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#109;</a>，要和下面的用户名一致；</p>\n<p>邮件通知，配置如下：可以点击测试，是否配置成功</p>\n<p><img src=\"assets/image-20200506172333414.png\" alt=\"image-20200506172333414\"></p>\n<p><img src=\"assets/image-20200507094735363.png\" alt=\"image-20200507094735363\"></p>\n<h5 id=\"6- 配置 jdk，maven 命令，全局配置\"><a href=\"#6- 配置 jdk，maven 命令，全局配置\" class=\"headerlink\" title=\"6. 配置 jdk，maven 命令，全局配置\"></a>6. 配置 jdk，maven 命令，全局配置</h5><p><img src=\"assets/1564335018840.png\" alt=\"1564335018840\"></p>\n<p><img src=\"assets/1570960064941.png\" alt=\"1570960064941\"></p>\n<p><img src=\"assets/1570960081945.png\" alt=\"1570960081945\"></p>\n<p><img src=\"assets/1564335123190.png\" alt=\"1564335123190\"></p>\n<p><img src=\"assets/1564335192681.png\" alt=\"1564335192681\"></p>\n<h5 id=\"7- 构建发布任务\"><a href=\"#7- 构建发布任务\" class=\"headerlink\" title=\"7. 构建发布任务\"></a>7. 构建发布任务</h5><p><img src=\"assets/1564335261703.png\" alt=\"1564335261703\"></p>\n<p><img src=\"assets/1564335284215.png\" alt=\"1564335284215\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507213800.png\" alt=\"1564335352695\"></p>\n<p>如下填写 git-server 仓库的地址   <a href=\"https://github.com/bingyue/easy-springmvc-maven\">https://github.com/bingyue/easy-springmvc-maven</a></p>\n<p><img src=\"assets/1564341315628.png\" alt=\"1564341315628\"></p>\n<p><img src=\"assets/1564335657071.png\" alt=\"1564335657071\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507154031.png\" alt=\"1564335823407\"></p>\n<h5 id=\"8- 调用 maven 命令\"><a href=\"#8- 调用 maven 命令\" class=\"headerlink\" title=\"8. 调用 maven 命令\"></a>8. 调用 maven 命令</h5><p><img src=\"assets/1564336901231.png\" alt=\"1564336901231\"></p>\n<p><img src=\"assets/1585227495268.png\" alt=\"1585227495268\"></p>\n<h5 id=\"9- 配置构建后操作模块\"><a href=\"#9- 配置构建后操作模块\" class=\"headerlink\" title=\"9. 配置构建后操作模块\"></a><strong>9. 配置构建后操作模块</strong></h5><p><img src=\"assets/image-20200507102158546.png\" alt=\"image-20200507102158546\"></p>\n<p><img src=\"assets/image-20200507102745939.png\" alt=\"image-20200507102745939\"></p>\n<p><img src=\"assets/image-20200507102817088.png\" alt=\"image-20200507102817088\"></p>\n<p><img src=\"assets/image-20200507102952918.png\" alt=\"image-20200507102952918\"></p>\n<p><img src=\"assets/image-20200507103026948.png\" alt=\"image-20200507103026948\"></p>\n<h5 id=\"10- 部署 java 服务器，做 jenkins 打包上线\"><a href=\"#10- 部署 java 服务器，做 jenkins 打包上线\" class=\"headerlink\" title=\"10. 部署 java 服务器，做 jenkins 打包上线\"></a>10. 部署 java 服务器，做 jenkins 打包上线</h5><p>java-server   —–192.168.246.210 操作如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@java-server ~]# mkdir -p /data/application</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">先上传 jdk 包 </span></span><br><span class=\"line\">[root@java-server ~]# tar xzf jdk-8u211-linux-x64.tar.gz -C /usr/local/</span><br><span class=\"line\">[root@java-server ~]# cd /usr/local/</span><br><span class=\"line\">[root@java-server local]# mv jdk1.8.0_211/ java</span><br><span class=\"line\">[root@java-server local]# cd</span><br><span class=\"line\"></span><br><span class=\"line\"> 下载 tomcat</span><br><span class=\"line\">[root@java-server ~]# wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.42/bin/apache-tomcat-8.5.45.tar.gz    #建议上传 tomcat 包 </span><br><span class=\"line\">[root@java-server ~]# tar xzf apache-tomcat-8.5.45.tar.gz -C /data/application/</span><br><span class=\"line\">[root@java-server ~]# cd /data/application/</span><br><span class=\"line\">[root@java-server application]# mv apache-tomcat-8.5.45/ tomcat</span><br><span class=\"line\">[root@java-server application]# cd</span><br><span class=\"line\"></span><br><span class=\"line\"> 设置环境变量 </span><br><span class=\"line\">[root@java-server ~]# vim /etc/profile    #最后面添加如下内容</span><br><span class=\"line\">export JAVA_HOME=/usr/local/java</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class=\"line\">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\">export TOMCAT_HOME=/data/application/tomcat</span><br><span class=\"line\">[root@java-server ~]# source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"> 测试:</span><br><span class=\"line\">[root@java-server ~]# java -version </span><br><span class=\"line\">java version &quot;1.8.0_211&quot;</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span><br><span class=\"line\"></span><br><span class=\"line\">删除 tomcat 默认发布目录下面的内容:</span><br><span class=\"line\">[root@java-server ~]# rm -rf /data/application/tomcat/webapps/*</span><br><span class=\"line\">[root@java-server ~]# cd /data/application/tomcat/webapps/</span><br><span class=\"line\">[root@java-server webapps]# ls</span><br><span class=\"line\">[root@java-server webapps]# cd</span><br><span class=\"line\"></span><br><span class=\"line\">创建目录和脚本:  #特别注意：一定要对应构造环境中 SSH Server 的目录和脚本名称 </span><br><span class=\"line\">[root@java-server ~]# mkdir /opt/script  #创建脚本目录</span><br><span class=\"line\">[root@java-server ~]# vim app-jenkins.sh   #创建脚本，脚本内容在后面</span><br><span class=\"line\">[root@java-server ~]# chmod +x app-jenkins.sh  #添加执行权限</span><br><span class=\"line\">[root@java-server ~]# mv app-jenkins.sh /opt/script/</span><br><span class=\"line\"> 脚本内容如下:</span><br><span class=\"line\">[root@java-server ~]# cd  /opt/script/</span><br><span class=\"line\">[root@java-server script]# cat app-jenkins.sh   #查看脚本内容 </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/usr/bin/bash</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 本脚本适用于 jenkins 持续集成，实现备份 war 包到代码更新上线！使用时请注意全局变量。</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">================</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Defining variables</span></span><br><span class=\"line\">export JAVA_HOME=/usr/local/java</span><br><span class=\"line\">webapp_path=&quot;/data/application/tomcat/webapps&quot;</span><br><span class=\"line\">tomcat_run=&quot;/data/application/tomcat/bin&quot;</span><br><span class=\"line\">updata_path=&quot;/data/update/`date +%F-%T`&quot;</span><br><span class=\"line\">backup_path=&quot;/data/backup/`date +%F-%T`&quot;</span><br><span class=\"line\">tomcat_pid=`ps -ef | grep tomcat | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class=\"line\">files_dir=&quot;easy-springmvc-maven&quot;</span><br><span class=\"line\">files=&quot;easy-springmvc-maven.war&quot;</span><br><span class=\"line\">job_path=&quot;/root/upload&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Preparation environment</span></span><br><span class=\"line\">echo &quot;Creating related directory&quot;</span><br><span class=\"line\">mkdir -p $updata_path</span><br><span class=\"line\">mkdir -p $backup_path</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Move the uploaded war package to the update directory&quot;</span><br><span class=\"line\">mv $job_path/$files $updata_path</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;=========================================================&quot;</span><br><span class=\"line\">cd /opt</span><br><span class=\"line\">echo &quot;Backing up java project&quot;</span><br><span class=\"line\">if [-f $webapp_path/$files];then</span><br><span class=\"line\">\ttar czf $backup_path/`date +%F-%H`.tar.gz $webapp_path</span><br><span class=\"line\">\tif [$? -ne 0];then</span><br><span class=\"line\">\t\techo &quot; 打包失败，自动退出 &quot;</span><br><span class=\"line\">\t\texit 1</span><br><span class=\"line\">\telse</span><br><span class=\"line\">\t\techo &quot;Checking if tomcat is started&quot;</span><br><span class=\"line\">\t\tif [-n &quot;$tomcat_pid&quot;];then</span><br><span class=\"line\">\t\t\tkill -9 $tomcat_pid</span><br><span class=\"line\">\t\t\tif [$? -ne 0];then</span><br><span class=\"line\">\t\t\t\techo &quot;tomcat 关闭失败，将会自动退出 &quot;</span><br><span class=\"line\">\t\t\t\texit 2</span><br><span class=\"line\">\t\t\tfi</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\">\t\tcd $webapp_path</span><br><span class=\"line\">\t\trm -rf $files &amp;&amp; rm -rf $files_dir</span><br><span class=\"line\">\t\tcp $updata_path/$files $webapp_path</span><br><span class=\"line\">\t\tcd /opt</span><br><span class=\"line\"><span class=\"meta\">\t\t$</span><span class=\"bash\">tomcat_run/startup.sh</span></span><br><span class=\"line\">\t\tsleep 5</span><br><span class=\"line\">\t\techo &quot; 显示 tomcat 的 pid&quot;</span><br><span class=\"line\">\t\techo &quot;`ps -ef | grep tomcat | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27;`&quot;</span><br><span class=\"line\">\t\techo &quot;tomcat startup&quot;</span><br><span class=\"line\">\t\techo &quot; 请手动查看 tomcat 日志。脚本将会自动退出 &quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\">else</span><br><span class=\"line\">\techo &quot;Checking if tomcat is started&quot;</span><br><span class=\"line\">        if [-n &quot;$tomcat_pid&quot;];then</span><br><span class=\"line\">        \tkill -9 $tomcat_pid</span><br><span class=\"line\">                if [$? -ne 0];then</span><br><span class=\"line\">                \techo &quot;tomcat 关闭失败，将会自动退出 &quot;</span><br><span class=\"line\">                       \texit 2</span><br><span class=\"line\">                fi</span><br><span class=\"line\">        fi</span><br><span class=\"line\">\tcp $updata_path/$files $webapp_path</span><br><span class=\"line\"><span class=\"meta\">\t$</span><span class=\"bash\">tomcat_run/startup.sh</span></span><br><span class=\"line\">        sleep 5</span><br><span class=\"line\">        echo &quot; 显示 tomcat 的 pid&quot;</span><br><span class=\"line\">        echo &quot;`ps -ef | grep tomcat | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27;`&quot;</span><br><span class=\"line\">        echo &quot;tomcat startup&quot;</span><br><span class=\"line\">        echo &quot; 请手动查看 tomcat 日志。脚本将会自动退出 &quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"11- 回到 jenkins 页面开始构建任务\"><a href=\"#11- 回到 jenkins 页面开始构建任务\" class=\"headerlink\" title=\"11. 回到 jenkins 页面开始构建任务\"></a>11. 回到 jenkins 页面开始构建任务</h5><p><img src=\"assets/1564336717415.png\" alt=\"1564336717415\"></p>\n<p><img src=\"assets/1564336734472.png\" alt=\"1564336734472\"></p>\n<p><img src=\"assets/1564336761194.png\" alt=\"1564336761194\"></p>\n<p><img src=\"assets/1564341387433.png\" alt=\"1564341387433\"></p>\n<p><img src=\"assets/1571056070912.png\" alt=\"1571056070912\"></p>\n<h5 id=\"12- 登陆 java-server 服务器查看\"><a href=\"#12- 登陆 java-server 服务器查看\" class=\"headerlink\" title=\"12. 登陆 java-server 服务器查看:\"></a>12. 登陆 java-server 服务器查看:</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@java-server ~]# netstat -lntp     #查看端口状态</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1564341789289.png\" alt=\"1564341789289\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@java-server ~]#  cd /data/application/tomcat/webapps</span><br><span class=\"line\">[root@java-server ~]#  ls</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1564341820575.png\" alt=\"1564341820575\"></p>\n<p>查看邮箱，可看到消息</p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507161153.png\" alt=\"1583236173518\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507160936.png\" alt=\"1583236298592\"></p>\n<p>访问测试  <a href=\"http://192.168.246.210:8080/easy-springmvc-maven\">http://192.168.246.210:8080/easy-springmvc-maven</a>           </p>\n<p>注意<strong>ip 是 java-server  192.168.246.210 的 ip</strong></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200507161724.png\"></p>\n<h5 id=\"13- 构建任务完成但是接收不到邮件的解决方法\"><a href=\"#13- 构建任务完成但是接收不到邮件的解决方法\" class=\"headerlink\" title=\"13. 构建任务完成但是接收不到邮件的解决方法\"></a>13. 构建任务完成但是接收不到邮件的解决方法 </h5><p><strong> 解决方法</strong>：如果邮箱接收不到邮件，进行如下操作</p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200508212646.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200508212706.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200508212710.png\"></p>\n<p>如果这样配置 <strong> 还是接收不到邮件</strong>，请在系统设置把邮件格式改为 HTML，如下操作</p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200508213235.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200508213232.png\"></p>\n<h2 id=\"Jenkins-Gitlab-Tomcat 实战\"><a href=\"#Jenkins-Gitlab-Tomcat 实战\" class=\"headerlink\" title=\"Jenkins+Gitlab+Tomcat 实战\"></a>Jenkins+Gitlab+Tomcat 实战 </h2><p><strong> 在上一实验的基础上进行如下：</strong></p>\n<p>上一实验已经部署完毕：jenkins 服务、jdk+tomcat、maven 工具</p>\n<p>这里因为 Jenkins 服务器去拉取代码做 jenkins 打包上线。所以要下载 git 客户端</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装 git 客户端:</span><br><span class=\"line\">[root@jenkins-server ~]# yum install -y git   #安装 git 客户端 </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 因为本服务器在上一实验产生私钥了，因此本服务器就不用进行分发拷贝私钥到本服务器</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：gitlab 部署请参考笔记：版本控制 git（部署 gitlab）</strong></p>\n<p><strong>访问 gitlab 的网站：例如：<a href=\"http://192.168.44.169/\">http://192.168.44.169</a></strong></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509100749.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509100837.png\"></p>\n<p><img src=\"assets/1583067401297.png\" alt=\"1583067401297\"></p>\n<p>开始一个简单的项目</p>\n<p><img src=\"assets/1583067657276.png\" alt=\"1583067657276\"></p>\n<p><img src=\"assets/1583067754415.png\" alt=\"1583067754415\"></p>\n<p><img src=\"assets/1583067793428.png\" alt=\"1583067793428\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509094203.png\"></p>\n<p><img src=\"assets/1583067975394.png\" alt=\"1583067975394\"></p>\n<p><img src=\"assets/1583068007505.png\" alt=\"1583068007505\"></p>\n<p><img src=\"assets/1583068086468.png\" alt=\"1583068086468\"></p>\n<p><img src=\"assets/1583068144311.png\" alt=\"1583068144311\"></p>\n<p><img src=\"assets/1583068196797.png\" alt=\"1583068196797\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cat /root/.ssh/id_rsa           #查看 Jenkins 服务器的私钥</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1583068314971.png\" alt=\"1583068314971\"></p>\n<p><img src=\"assets/1583068382540.png\" alt=\"1583068382540\"></p>\n<p><img src=\"assets/1585279946364.png\" alt=\"1585279946364\"></p>\n<p><img src=\"assets/1585280142108.png\" alt=\"1585280142108\"></p>\n<p>Jenkins 端配置好之后，还应该 gitlab 端配置 Jenkins 服务器的公钥</p>\n<p>在 jenkins 服务器上查看公钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# cat /root/.ssh/id_rsa.pub    #查看 Jenkins 服务器的公钥 </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/1585221510597.png\" alt=\"1585221510597\"></p>\n<p>复制粘贴到 gitlab</p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509101021.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509101109.png\"></p>\n<p><img src=\"assets%5CQQ%E5%9B%BE%E7%89%8720200509101308.png\"></p>\n<p><img src=\"assets/1585221543706.png\" alt=\"1585221543706\"></p>\n<p>然后去构建项目。自动拉取代码</p>\n<p><img src=\"assets/1583068437105.png\" alt=\"1583068437105\"></p>\n<p>注意看拉取到了哪个目录下</p>\n<p><img src=\"assets/1583067427222.png\" alt=\"1583067427222\"></p>\n<p>在 Jenkins 服务器上查看</p>\n<p>在这个目录下能找到已经拉取 git 的项目；证明项目成功完成</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]#  ls /root/.jenkins/workspace/demo</span><br><span class=\"line\">beifen.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"gitlab-webhook-jenkins- 实现代码自动化发布\"><a href=\"#gitlab-webhook-jenkins- 实现代码自动化发布\" class=\"headerlink\" title=\"gitlab webhook + jenkins 实现代码自动化发布\"></a>gitlab webhook + jenkins 实现代码自动化发布 </h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Webhook 本质上也是 API，只不过是反向调用.</span><br><span class=\"line\"></span><br><span class=\"line\">Webhook 工作原理</span><br><span class=\"line\"> 为了及时通知，此时就产生了 Webhook 这种概念，其实就是为了更好地去通知调用的结果。在我们发出请求的时候，可以向服务器注册一个 Webhook 的地址，告诉服务器说，等调用结果一出来，第一时间通过这个 Webhook 地址通知我，我好处理接下来的步骤。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;webhook(网络钩子)，一般与 jenkins 联合使用 &quot;，&quot;gitlab 的某个项目的代码更新了后就触发 webhook 中配置的 url ，这个 url 一般是某一个 jienkins 中某一个 job 的 url。即 gitlab 代码更新后就会触发 jinkins 的任务自动进行构建。&quot;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"gitlab 部署 - 略\"><a href=\"#gitlab 部署 - 略\" class=\"headerlink\" title=\"gitlab 部署 略\"></a>gitlab 部署 略 </h6><h6 id=\"配置 gitlab\"><a href=\"# 配置 gitlab\" class=\"headerlink\" title=\"配置 gitlab\"></a> 配置 gitlab</h6><p>密码 123456</p>\n<p><img src=\"assets/image-20200507105840164.png\" alt=\"image-20200507105840164\"></p>\n<p>创建组</p>\n<p><img src=\"assets/image-20200507105945675.png\" alt=\"image-20200507105945675\"></p>\n<p><img src=\"assets/image-20200507110120047.png\" alt=\"image-20200507110120047\"></p>\n<p><img src=\"assets/image-20200507110135048.png\" alt=\"image-20200507110135048\"></p>\n<p>创建一个项目</p>\n<p><img src=\"assets/image-20200507110209158.png\" alt=\"image-20200507110209158\"></p>\n<p><img src=\"assets/image-20200507110222900.png\" alt=\"image-20200507110222900\"></p>\n<p><img src=\"assets/image-20200509151733670.png\" alt=\"image-20200509151733670\"></p>\n<p><img src=\"assets/image-20200509151812538.png\" alt=\"image-20200509151812538\"></p>\n<h6 id=\"构建项目\"><a href=\"# 构建项目\" class=\"headerlink\" title=\"构建项目\"></a>构建项目</h6><p><img src=\"assets/image-20200507110455693.png\" alt=\"image-20200507110455693\"></p>\n<p><img src=\"assets/image-20200507110525662.png\" alt=\"image-20200507110525662\"></p>\n<p><img src=\"assets/image-20200509152008141.png\" alt=\"image-20200509152008141\"></p>\n<h6 id=\"登录 gitlab 获取到 git 仓库地址\"><a href=\"# 登录 gitlab 获取到 git 仓库地址\" class=\"headerlink\" title=\"登录 gitlab 获取到 git 仓库地址\"></a>登录 gitlab 获取到 git 仓库地址</h6><p><img src=\"assets/image-20200509152113940.png\" alt=\"image-20200509152113940\"></p>\n<p><strong>切换到 jenkins 界面</strong></p>\n<p><img src=\"assets/image-20200509152230943.png\" alt=\"image-20200509152230943\"></p>\n<p><img src=\"assets/image-20200509152625298.png\" alt=\"image-20200509152625298\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-server ~]# useradd jenkins</span><br><span class=\"line\">[root@jenkins-server ~]# su - jenkins</span><br><span class=\"line\">[jenkins@jenkins-server ~]$ ssh-keygen</span><br><span class=\"line\">[jenkins@jenkins-server ~]$ cat .ssh/id_rsa  #查看 jenkins 用户的私钥</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/image-20200507113147771.png\" alt=\"image-20200507113147771\"></p>\n<p><img src=\"assets/image-20200509154328901.png\" alt=\"image-20200509154328901\"></p>\n<p><img src=\"assets/image-20200509154344323.png\" alt=\"image-20200509154344323\"></p>\n<p><strong>切换到 gitlab 的界面</strong></p>\n<h6 id=\"将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中\"><a href=\"# 将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中\" class=\"headerlink\" title=\"将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中\"></a>将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中</h6><p><img src=\"assets/image-20200509154445464.png\" alt=\"image-20200509154445464\"></p>\n<p><img src=\"assets/image-20200509154502913.png\" alt=\"image-20200509154502913\"></p>\n<p><img src=\"assets/image-20200509154549201.png\" alt=\"image-20200509154549201\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录到 jenkins 服务器中</span><br><span class=\"line\">[jenkins@jenkins-server ~]$ cat .ssh/id_rsa.pub  #查看 jenkins 用户的公钥</span><br><span class=\"line\">[jenkins@jenkins-server ~]$ exit   #切换到 root 用户</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/image-20200509154632160.png\" alt=\"image-20200509154632160\"></p>\n<p><img src=\"assets/image-20200509154656904.png\" alt=\"image-20200509154656904\"></p>\n<p><strong>切换到 jenkins 界面</strong></p>\n<p>jenkins 界面已经 ok</p>\n<p><img src=\"assets/image-20200509154743906.png\" alt=\"image-20200509154743906\"></p>\n<h6 id=\"构建触发器\"><a href=\"# 构建触发器\" class=\"headerlink\" title=\"构建触发器\"></a>构建触发器</h6><p><img src=\"assets/image-20200509161909357.png\" alt=\"image-20200509161909357\"></p>\n<p><img src=\"assets/image-20200509162124182.png\" alt=\"image-20200509162124182\"></p>\n<p><strong>要记录下上边的 URL 和认证密钥，切换到 gitlab，找到对应的 git 库  点击 setting –&gt; webhook , 填写以下内容</strong></p>\n<p><img src=\"assets/image-20200509162254966.png\" alt=\"image-20200509162254966\"></p>\n<p><img src=\"assets/image-20200509162306718.png\" alt=\"image-20200509162306718\"></p>\n<p><img src=\"assets/image-20200509162359619.png\" alt=\"image-20200509162359619\"></p>\n<p><img src=\"assets/image-20200509162446109.png\" alt=\"image-20200509162446109\"></p>\n<p><img src=\"assets/image-20200509163833449.png\" alt=\"image-20200509163833449\"></p>\n<p><img src=\"assets/image-20200509164137633.png\" alt=\"image-20200509164137633\"></p>\n<p>添加完成之后报错</p>\n<p><img src=\"assets/image-20200509164427019.png\" alt=\"image-20200509164427019\"></p>\n<p>这是因为 gitlab 10.6 版本以后为了安全，不允许向本地网络发送 webhook 请求，设置如下：</p>\n<p>登录管理员账号</p>\n<p><img src=\"assets/image-20200509165216187.png\" alt=\"image-20200509165216187\"></p>\n<p><img src=\"assets/image-20200509165247487.png\" alt=\"image-20200509165247487\"></p>\n<p><img src=\"assets/image-20200509165330067.png\" alt=\"image-20200509165330067\"></p>\n<h6 id=\"然后再次添加 webhook\"><a href=\"# 然后再次添加 webhook\" class=\"headerlink\" title=\"然后再次添加 webhook\"></a>然后再次添加 webhook</h6><p><img src=\"assets/image-20200509164137633.png\" alt=\"image-20200509164137633\"></p>\n<p><img src=\"assets/image-20200509165512159.png\" alt=\"image-20200509165512159\"></p>\n<h6 id=\"回到 jenkins 页面\"><a href=\"# 回到 jenkins 页面\" class=\"headerlink\" title=\"回到 jenkins 页面\"></a>回到 jenkins 页面</h6><p><img src=\"assets/image-20200509165859689.png\" alt=\"image-20200509165859689\"></p>\n<h6 id=\"开始测试：模拟开发更新代码到 gitlab 库\"><a href=\"# 开始测试：模拟开发更新代码到 gitlab 库\" class=\"headerlink\" title=\"开始测试：模拟开发更新代码到 gitlab 库\"></a>开始测试：模拟开发更新代码到 gitlab 库 </h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 我这里在 gitlab 机器上面测试：</span><br><span class=\"line\">[root@git-server ~]# ssh-keygen #生成秘钥</span><br><span class=\"line\">[root@git-server ~]# cat .ssh/id_rsa.pub  #查看生成的公钥添加到 gitlab 里面去</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"assets/image-20200509171550374.png\" alt=\"image-20200509171550374\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@git-server ~]# git clone git@192.168.153.156:root/test1.git</span><br><span class=\"line\">Cloning into &#x27;test1&#x27;...</span><br><span class=\"line\">remote: Enumerating objects: 6, done.</span><br><span class=\"line\">remote: Counting objects: 100% (6/6), done.</span><br><span class=\"line\">remote: Compressing objects: 100% (4/4), done.</span><br><span class=\"line\">remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">Receiving objects: 100% (6/6), done.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@git-server ~]# ls</span><br><span class=\"line\">anaconda-ks.cfg  test1  upload</span><br><span class=\"line\">[root@git-server ~]# cd test1/</span><br><span class=\"line\">[root@git-server test1]# ls</span><br><span class=\"line\">README.md </span><br><span class=\"line\">[root@git-server test1]# touch a.txt    #模拟开发编写代码</span><br><span class=\"line\">[root@git-server test1]# git add .    #放到暂存区</span><br><span class=\"line\">[root@git-server test1]# git commit -m &#x27;test&#x27;   #提交到本地版本库</span><br><span class=\"line\">[master 2451295] test</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 a.txt</span><br><span class=\"line\">[root@git-server test1]# git push origin master    #上传到远程仓库的 master 分支</span><br><span class=\"line\">Counting objects: 4, done.</span><br><span class=\"line\">Delta compression using up to 2 threads.</span><br><span class=\"line\">Compressing objects: 100% (2/2), done.</span><br><span class=\"line\">Writing objects: 100% (3/3), 296 bytes | 0 bytes/s, done.</span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">To git@192.168.153.156:root/test1.git</span><br><span class=\"line\">   f3848d7..2451295  master -&gt; master</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"返回到 jenkins 页面查看是否自动发布\"><a href=\"# 返回到 jenkins 页面查看是否自动发布\" class=\"headerlink\" title=\"返回到 jenkins 页面查看是否自动发布\"></a>返回到 jenkins 页面查看是否自动发布</h6><p><img src=\"assets/image-20200509171913723.png\" alt=\"image-20200509171913723\"></p>\n<p><img src=\"assets/image-20200509165828679.png\" alt=\"image-20200509165828679\"></p>\n","url":"/posts/52747/","min2read":24,"word4post":"5.3k","prev_post":null,"next_post":{"title":"Hello World","url":"/posts/16107/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Jenkins 构建 CI-CD\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">Jenkins 构建 CI&#x2F;CD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"CI-CD 是什么？\" href = \"#\"><span class=\"toc-number\">1.0.1.</span> <span class=\"toc-text\">CI&#x2F;CD 是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"为什么要 -CI-CD- 方法简介\" href = \"#\"><span class=\"toc-number\">1.0.2.</span> <span class=\"toc-text\">为什么要 CI &#x2F; CD 方法简介 </span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"一、jenkins 介绍\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">一、jenkins 介绍 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"1、Jenkins 概述\" href = \"#\"><span class=\"toc-number\">1.1.0.0.1.</span> <span class=\"toc-text\">1、Jenkins 概述 </span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"2、Jenkins 目标\" href = \"#\"><span class=\"toc-number\">1.1.0.0.2.</span> <span class=\"toc-text\">2、Jenkins 目标</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"3、Jenkins 特性\" href = \"#\"><span class=\"toc-number\">1.1.0.0.3.</span> <span class=\"toc-text\">3、Jenkins 特性 </span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"4、产品发布流程\" href = \"#\"><span class=\"toc-number\">1.1.0.0.4.</span> <span class=\"toc-text\">4、产品发布流程 </span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"二、部署应用\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">二、部署应用 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Jenkins-Github-Tomcat 实战\" href = \"#\"><span class=\"toc-number\">1.3.</span> <span class=\"toc-text\">Jenkins+Github+Tomcat 实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"准备环境\" href = \"#\"><span class=\"toc-number\">1.3.0.0.1.</span> <span class=\"toc-text\"> 准备环境:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"1- 部署 jenkins 服务器\" href = \"#\"><span class=\"toc-number\">1.3.0.0.2.</span> <span class=\"toc-text\">1. 部署 jenkins 服务器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"2- 访问界面 -—需要多等一会\" href = \"#\"><span class=\"toc-number\">1.3.0.0.3.</span> <span class=\"toc-text\">2. 访问界面:   —需要多等一会</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"3- 安装插件\" href = \"#\"><span class=\"toc-number\">1.3.0.0.4.</span> <span class=\"toc-text\">3. 安装插件 </span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"4- 添加远程 ssh-server\" href = \"#\"><span class=\"toc-number\">1.3.0.0.5.</span> <span class=\"toc-text\">4. 添加远程 ssh-server:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"5- 扩展：邮件通知（用于项目构建后发送邮件）\" href = \"#\"><span class=\"toc-number\">1.3.0.0.6.</span> <span class=\"toc-text\">5. 扩展：邮件通知（用于项目构建后发送邮件）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"6- 配置 jdk，maven 命令，全局配置\" href = \"#\"><span class=\"toc-number\">1.3.0.0.7.</span> <span class=\"toc-text\">6. 配置 jdk，maven 命令，全局配置</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"7- 构建发布任务\" href = \"#\"><span class=\"toc-number\">1.3.0.0.8.</span> <span class=\"toc-text\">7. 构建发布任务</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"8- 调用 maven 命令\" href = \"#\"><span class=\"toc-number\">1.3.0.0.9.</span> <span class=\"toc-text\">8. 调用 maven 命令</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"9- 配置构建后操作模块\" href = \"#\"><span class=\"toc-number\">1.3.0.0.10.</span> <span class=\"toc-text\">9. 配置构建后操作模块</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"10- 部署 java 服务器，做 jenkins 打包上线\" href = \"#\"><span class=\"toc-number\">1.3.0.0.11.</span> <span class=\"toc-text\">10. 部署 java 服务器，做 jenkins 打包上线</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"11- 回到 jenkins 页面开始构建任务\" href = \"#\"><span class=\"toc-number\">1.3.0.0.12.</span> <span class=\"toc-text\">11. 回到 jenkins 页面开始构建任务</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"12- 登陆 java-server 服务器查看\" href = \"#\"><span class=\"toc-number\">1.3.0.0.13.</span> <span class=\"toc-text\">12. 登陆 java-server 服务器查看:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" data-id=\"13- 构建任务完成但是接收不到邮件的解决方法\" href = \"#\"><span class=\"toc-number\">1.3.0.0.14.</span> <span class=\"toc-text\">13. 构建任务完成但是接收不到邮件的解决方法 </span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Jenkins-Gitlab-Tomcat 实战\" href = \"#\"><span class=\"toc-number\">1.4.</span> <span class=\"toc-text\">Jenkins+Gitlab+Tomcat 实战 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"gitlab-webhook-jenkins- 实现代码自动化发布\" href = \"#\"><span class=\"toc-number\">1.5.</span> <span class=\"toc-text\">gitlab webhook + jenkins 实现代码自动化发布 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"gitlab 部署 - 略\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.1.</span> <span class=\"toc-text\">gitlab 部署 略 </span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"配置 gitlab\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.2.</span> <span class=\"toc-text\"> 配置 gitlab</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"构建项目\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.3.</span> <span class=\"toc-text\">构建项目</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"登录 gitlab 获取到 git 仓库地址\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.4.</span> <span class=\"toc-text\">登录 gitlab 获取到 git 仓库地址</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.5.</span> <span class=\"toc-text\">将 jenkins 服务器上面的 jenkins 用户的公钥添加到 gitlab 中</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"构建触发器\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.6.</span> <span class=\"toc-text\">构建触发器</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"然后再次添加 webhook\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.7.</span> <span class=\"toc-text\">然后再次添加 webhook</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"回到 jenkins 页面\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.8.</span> <span class=\"toc-text\">回到 jenkins 页面</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"开始测试：模拟开发更新代码到 gitlab 库\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.9.</span> <span class=\"toc-text\">开始测试：模拟开发更新代码到 gitlab 库 </span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" data-id=\"返回到 jenkins 页面查看是否自动发布\" href = \"#\"><span class=\"toc-number\">1.5.0.0.0.10.</span> <span class=\"toc-text\">返回到 jenkins 页面查看是否自动发布</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol>","categories":[],"tags":[]}